- name: Linux target
  hosts: all
  become: true
  tasks:
    - name: Install unzip
      ansible.builtin.apt:
        update_cache: yes
        name: unzip

    - name: Install requirements
      ansible.builtin.apt:
        pkg:
        - postgresql
        - postgresql-contrib

    - name: Copy vulnerable source
      ansible.builtin.unarchive:
        src: ./data/lunary.zip
        dest: /tmp
        mode: '0777'

    - name: Create lunary user for postgres
      ansible.builtin.shell: >
        sudo -i -u postgres psql -c "CREATE USER lunary WITH PASSWORD 'lunary'; ALTER ROLE lunary SUPERUSER;"
    
    - name: Create lunary db
      ansible.builtin.shell: >
        sudo -i -u postgres createdb lunary

    - name: Install nvm
      ansible.builtin.shell: >
        curl -o- https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash
      args:
        executable: /bin/bash
        chdir: "$HOME"
        creates: "$HOME/.nvm/nvm.sh"

    - name: Install node and project deps
      shell: >
        tar -xzf data/node-v20.18.0-darwin-x64.tar.gz -C /usr/local &&
        export PATH=/usr/local/node-v20.18.0-darwin-x64/bin:$PATH &&
        npm install &&
        npm run migrate:db
      args:
        executable: /bin/bash
        chdir: "$HOME"
        creates: "$HOME/.node/bin/node"

    - name: Deploy systemd service
      ansible.builtin.copy:
        src: ./data/lunary-backend.service
        dest: /etc/systemd/system/lunary-backend.service
        owner: root
        group: root
        mode: '0644'

    - name: Start and enable the service
      ansible.builtin.systemd:
        name: lunary-backend.service
        enabled: true
        state: started
            
